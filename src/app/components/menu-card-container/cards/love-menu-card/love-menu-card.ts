import { Component, OnInit } from '@angular/core';
import { MenuCard } from "../../menu-card/menu-card";
import { IMenuCard } from '../../../../interfaces/imenu-card';
import { CommonModule } from '@angular/common';
import { ResultProgress } from '../../../result-progress/result-progress';
import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { DomSanitizer } from '@angular/platform-browser';
import { ClickLink } from "../../../click-link/click-link";
import { IProgressCard } from '../../../../interfaces/iprogress-card';

@Component({
  selector: 'app-love-menu-card',
  imports: [
    MenuCard,
    CommonModule,
    ResultProgress,
    ReactiveFormsModule,
    ClickLink
],
  templateUrl: './love-menu-card.html',
  styleUrl: './love-menu-card.css'
})
export class LoveMenuCard implements OnInit {
  card: IMenuCard = {
    svg: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M25.8845 8.21338C25.6963 8.21338 25.5125 8.26916 25.3561 8.37367C25.1996 8.47818 25.0777 8.62672 25.0057 8.80052C24.9338 8.97431 24.9149 9.16555 24.9516 9.35004C24.9883 9.53454 25.0789 9.70401 25.2119 9.83703C25.3449 9.97004 25.5144 10.0606 25.6989 10.0973C25.8834 10.134 26.0746 10.1152 26.2484 10.0432C26.4222 9.97122 26.5708 9.84931 26.6753 9.6929C26.7798 9.53649 26.8356 9.3526 26.8356 9.16449C26.8356 8.91224 26.7354 8.67032 26.557 8.49195C26.3786 8.31358 26.1367 8.21338 25.8845 8.21338Z" fill="#240028"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M5.38666 22.0444C5.19855 22.0444 5.01466 22.1002 4.85825 22.2047C4.70184 22.3092 4.57993 22.4578 4.50795 22.6316C4.43596 22.8054 4.41712 22.9966 4.45382 23.1811C4.49052 23.3656 4.58111 23.5351 4.71412 23.6681C4.84714 23.8011 5.01661 23.8917 5.20111 23.9284C5.3856 23.9651 5.57684 23.9462 5.75063 23.8743C5.92443 23.8023 6.07297 23.6804 6.17748 23.524C6.28199 23.3675 6.33777 23.1837 6.33777 22.9955C6.33777 22.7433 6.23756 22.5014 6.0592 22.323C5.88083 22.1446 5.63891 22.0444 5.38666 22.0444Z" fill="#240028"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M29.4222 15.1112C29.0001 14.4585 28.4472 13.9005 27.7984 13.4725C27.1496 13.0445 26.419 12.7557 25.6529 12.6246C24.8868 12.4934 24.1018 12.5226 23.3476 12.7104C22.5933 12.8982 21.8863 13.2405 21.2711 13.7156C21.1911 13.5378 21.1022 13.3778 21.0133 13.2089C21.1407 12.8539 21.2475 12.4918 21.3333 12.1245C22.3378 7.68004 21.1111 3.80449 18.5244 2.40004C17.8322 2.04543 17.0738 1.83844 16.2974 1.79217C15.5209 1.74591 14.7433 1.86139 14.0139 2.13129C13.2844 2.40119 12.6189 2.81963 12.0595 3.36012C11.5002 3.9006 11.0592 4.55135 10.7644 5.27115C10.1484 4.79009 9.4387 4.44288 8.6808 4.25173C7.9229 4.06058 7.13344 4.02969 6.36292 4.16103C5.5924 4.29238 4.85776 4.58308 4.206 5.01453C3.55423 5.44599 2.99967 6.00871 2.57777 6.66671C1.04 9.17338 1.90222 13.1378 5.01333 16.4978C6.62157 18.1259 8.54531 19.4083 10.6667 20.2667L10.72 20.5512C11.3422 23.6445 14.0267 27.3245 16.4178 29.92C16.54 30.0506 16.6966 30.144 16.8696 30.1896C17.0425 30.2352 17.2248 30.2311 17.3956 30.1778C20.7467 29.1289 24.8889 27.28 26.9956 24.8889C30.0978 21.5467 30.96 17.5912 29.4222 15.1112ZM6.42666 15.2623C5.05392 13.8973 4.12459 12.1502 3.76 10.2489C3.60218 9.37481 3.753 8.47302 4.18666 7.69782C5.28888 5.92004 8.24888 5.21782 10.48 7.62671C10.5977 7.75318 10.7474 7.84553 10.9132 7.89403C11.0791 7.94253 11.2549 7.94537 11.4222 7.90226C11.5888 7.85629 11.7397 7.7658 11.8587 7.64051C11.9778 7.51522 12.0604 7.35987 12.0978 7.19115C12.8267 3.99115 15.7333 3.10226 17.5822 4.1156C18.3451 4.5639 18.927 5.26523 19.2267 6.09782C19.8334 7.81105 19.9322 9.6631 19.5111 11.4312C18.6727 10.7677 17.6606 10.3603 16.5963 10.2578C15.532 10.1553 14.4608 10.3621 13.5111 10.8534C11.4311 11.9823 10.2311 14.7112 10.3644 18.0712C8.88801 17.3772 7.55289 16.4158 6.42666 15.2356V15.2623ZM28.24 18.64C27.8739 20.5433 26.945 22.2929 25.5733 23.6623C23.7956 25.68 20.3289 27.2178 17.3867 28.1956C15.3155 25.8756 13.0844 22.8089 12.56 20.1956C12.0606 18.3272 12.1318 16.3521 12.7644 14.5245C13.0498 13.6561 13.6362 12.9184 14.4178 12.4445C16.2667 11.44 19.1733 12.3289 19.9022 15.5289C19.9415 15.6962 20.0253 15.8498 20.1448 15.9732C20.2643 16.0967 20.415 16.1855 20.5809 16.2302C20.7469 16.2749 20.9218 16.2737 21.0871 16.227C21.2525 16.1802 21.4021 16.0895 21.52 15.9645C23.7511 13.5467 26.7111 14.24 27.8044 16.0356C28.2533 16.8151 28.4078 17.7297 28.24 18.6134V18.64Z" fill="#240028"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M24.32 5.50228H24.8711C24.9815 5.50338 25.087 5.54812 25.1645 5.62672L25.5378 6.03561C25.5889 6.09289 25.6565 6.13301 25.7312 6.15051C25.806 6.16801 25.8843 6.16203 25.9556 6.13339C26.028 6.10439 26.0898 6.05393 26.1327 5.98878C26.1756 5.92363 26.1975 5.84692 26.1956 5.76894C26.1956 5.55561 26.1956 5.35117 26.1956 5.21783C26.1946 5.16294 26.2051 5.10846 26.2266 5.05792C26.248 5.00738 26.2799 4.96192 26.32 4.9245L26.7289 4.55117C26.784 4.49823 26.8219 4.43 26.8379 4.35528C26.8538 4.28057 26.847 4.2028 26.8182 4.132C26.7895 4.06121 26.7403 4.00064 26.6768 3.9581C26.6134 3.91557 26.5386 3.89303 26.4622 3.89339H25.9111C25.8562 3.89439 25.8018 3.88383 25.7512 3.86239C25.7007 3.84095 25.6552 3.80911 25.6178 3.76894C25.5289 3.66228 25.3867 3.51117 25.2445 3.36005C25.195 3.30048 25.1274 3.25869 25.052 3.24105C24.9766 3.2234 24.8975 3.23085 24.8267 3.26228C24.7527 3.28899 24.6894 3.33892 24.6461 3.40461C24.6029 3.47029 24.582 3.54821 24.5867 3.62672V4.17783C24.5856 4.28821 24.5408 4.39367 24.4622 4.47117C24.3556 4.56005 24.2045 4.69339 24.0534 4.8445C23.9938 4.89398 23.952 4.96157 23.9343 5.03698C23.9167 5.11238 23.9241 5.19149 23.9556 5.26228C23.9846 5.33469 24.035 5.3965 24.1002 5.4394C24.1653 5.4823 24.242 5.50424 24.32 5.50228Z" fill="#240028"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M10.0266 25.4845L9.51109 25.2889C9.45877 25.2708 9.41101 25.2416 9.37111 25.2032C9.3312 25.1648 9.30011 25.1183 9.27998 25.0667L9.09331 24.5423C9.06516 24.4709 9.0162 24.4097 8.95279 24.3665C8.88938 24.3234 8.81446 24.3003 8.73776 24.3003C8.66106 24.3003 8.58613 24.3234 8.52272 24.3665C8.45931 24.4097 8.41035 24.4709 8.3822 24.5423C8.31109 24.7467 8.23109 24.9423 8.18664 25.0667C8.16973 25.1186 8.14078 25.1658 8.10216 25.2044C8.06354 25.2431 8.01635 25.272 7.96442 25.2889L7.44887 25.4845C7.37752 25.5126 7.31629 25.5616 7.27314 25.625C7.22998 25.6884 7.20691 25.7633 7.20691 25.84C7.20691 25.9167 7.22998 25.9917 7.27314 26.0551C7.31629 26.1185 7.37752 26.1674 7.44887 26.1956L7.96442 26.3823C8.01599 26.4024 8.06257 26.4335 8.10094 26.4734C8.13931 26.5133 8.16855 26.561 8.18664 26.6134C8.18664 26.7378 8.31109 26.9245 8.3822 27.1289C8.41035 27.2003 8.45931 27.2615 8.52272 27.3046C8.58613 27.3478 8.66106 27.3709 8.73776 27.3709C8.81446 27.3709 8.88938 27.3478 8.95279 27.3046C9.0162 27.2615 9.06516 27.2003 9.09331 27.1289L9.27998 26.6134C9.30099 26.5613 9.33229 26.514 9.37199 26.4743C9.4117 26.4346 9.45901 26.4033 9.51109 26.3823L10.0266 26.1956C10.098 26.1674 10.1592 26.1185 10.2024 26.0551C10.2455 25.9917 10.2686 25.9167 10.2686 25.84C10.2686 25.7633 10.2455 25.6884 10.2024 25.625C10.1592 25.5616 10.098 25.5126 10.0266 25.4845Z" fill="#240028"/>
          </svg>`,
    heading: "Love Calculator",
    sub: "Know your future from the best of horoscope readers.",
    blurColor:'#F00',
    width: "100%",
  };

  calculatorForm: FormGroup;
  reportCard: IProgressCard = {
    score: -1,
    subHeading: "Love Compatibility",
    ringSetting: {
      size: '136px',
      presetColor: "#DABFBF",
      width: "7",
      bgWidth: '10',
    },
    scoreColor: "#240028",
    subColor: "#3B3B3B",
    scoreFSize: "24px",
    subFSize: "9px",
  }

  constructor(private fb: FormBuilder, private sanitizer: DomSanitizer) {
    this.calculatorForm = this.fb.group({
      boyName: ['', Validators.required],
      girlName: ['', Validators.required]
    });
  }

  ngOnInit(): void {
    this.svgSantization();
  }

  private svgSantization(){
    const s = this.card.svg as string;
    this.card.svg = this.sanitizer.bypassSecurityTrustHtml(s);
  }

  calculatorSubmit(){
    if (this.calculatorForm.valid) {
      console.log('form value: ', this.calculatorForm.value);
    } else {
      console.log('Form is invalid');
    }
  }

}
