import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { SectionTag } from "../section-tag/section-tag";
import { MenuCard } from "../menu-card-container/menu-card/menu-card";
import { IMenuCard } from '../../interfaces/imenu-card';
import { HeaderService } from '../../services/header.service';
import { DomSanitizer } from '@angular/platform-browser';
import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { RudrakshSection } from "../rudraksh-section/rudraksh-section";
import { AboutSection } from "../about-section/about-section";
import { FAQSection } from "../faq-section/faq-section";
import { IRudrakshForm } from '../../interfaces/irudraksh-form';
import { Router } from '@angular/router';
import { FormService } from '../../services/form.service';

@Component({
  selector: 'app-rudraksha-calculator',
  imports: [
    CommonModule,
    SectionTag,
    MenuCard,
    ReactiveFormsModule,
    RudrakshSection,
    AboutSection,
    FAQSection
],
  templateUrl: './rudraksha-calculator.html',
  styleUrl: './rudraksha-calculator.css'
})
export class RudrakshaCalculator implements OnInit {

  sectionBrief = "Lorem ipsum dolor sit amet consectetur adipiscing elit. Quisque faucibus ex sapien vitae pellentesque sem placerat. In id cursus mi pretium tellus duis convallis. Tempus leo eu aenean sed diam urna tempor. Pulvinar vivamus fringilla lacus nec metus bibendum egestas. Iaculis massa nisl malesuada lacinia integer nunc posuere. Ut hendrerit semper vel class aptent taciti sociosqu. Ad litora torquent per conubia nostra inceptos himenaeos";

  menuCard: IMenuCard = {
    heading: "Rudraksh Finder",
    sub: "Know your which rudraksh is best suited for you",
    blurColor: "#FF0012",
    svg: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none">
  <g clip-path="url(#clip0_1494_5)">
    <path d="M31.9801 10.9216C31.9801 10.129 31.6714 9.38371 31.1109 8.82323C30.9457 8.65806 30.7642 8.51544 30.5705 8.39543C30.8 7.96895 30.922 7.48981 30.922 6.99186C30.922 6.19925 30.6133 5.45398 30.0528 4.8935C29.4925 4.33328 28.7478 4.02468 27.9557 4.0243C27.9553 3.23212 27.6467 2.48736 27.0865 1.92713C26.14 0.980713 24.7085 0.808983 23.5853 1.41069C23.4652 1.21654 23.3223 1.03462 23.1568 0.869142C22.5963 0.308663 21.8511 0 21.0584 0C20.2658 0 19.5205 0.308663 18.96 0.869204C18.7324 1.09672 18.5472 1.35509 18.4065 1.6344C17.3136 1.14101 15.981 1.34222 15.0841 2.23898C14.66 2.66315 14.3804 3.19314 14.2693 3.7693C14.116 3.74519 13.9599 3.73238 13.8019 3.73238C13.0092 3.73238 12.2639 4.04104 11.7035 4.60158C11.1648 5.1402 10.8596 5.84967 10.8365 6.60761C10.1081 6.63041 9.38659 6.91846 8.8318 7.47313C8.27132 8.03367 7.96259 8.77887 7.96259 9.57155C7.96259 9.77951 7.98439 9.9841 8.02587 10.1831C7.50756 10.3112 7.0321 10.5781 6.64486 10.9653C6.08431 11.5258 5.77565 12.271 5.77565 13.0637C5.77565 13.4643 5.85474 13.8527 6.0051 14.2113C5.73036 14.3513 5.47605 14.5346 5.25172 14.7589C4.69118 15.3194 4.38251 16.0646 4.38251 16.8573C4.38251 17.6085 4.66019 18.3169 5.16632 18.866C4.63883 19.42 4.34853 20.1427 4.34853 20.9105C4.34853 21.7031 4.65719 22.4484 5.21773 23.0089C5.6682 23.4593 6.23811 23.7467 6.856 23.8424L6.23437 24.464C5.13134 23.8926 3.73845 24.0685 2.81427 24.9926L0.0234375 27.7834L4.24002 32L7.03079 29.2092C7.95491 28.2851 8.13089 26.8922 7.55941 25.7891L8.14344 25.2051C8.25233 25.7878 8.53294 26.3242 8.96123 26.7525C9.53977 27.331 10.2997 27.6203 11.0597 27.6203C11.7963 27.6203 12.5324 27.3476 13.1039 26.804C13.6716 27.3316 14.3969 27.5962 15.1227 27.5962C15.8826 27.5962 16.6426 27.3069 17.2211 26.7284C17.4454 26.504 17.6287 26.2497 17.7687 25.975C18.1273 26.1253 18.5157 26.2044 18.9162 26.2044C19.7089 26.2044 20.4542 25.8957 21.0146 25.3352C21.4024 24.9475 21.6694 24.4713 21.7973 23.9522C21.9987 23.9943 22.2034 24.0161 22.4083 24.0161C23.1683 24.0161 23.9282 23.7268 24.5068 23.1482C25.0615 22.5935 25.3495 21.8719 25.3723 21.1435C26.1303 21.1205 26.8397 20.8152 27.3784 20.2766C27.9389 19.7161 28.2476 18.9709 28.2476 18.1781C28.2476 18.0195 28.2346 17.863 28.2104 17.7092C28.7716 17.6007 29.3073 17.3295 29.741 16.8958C30.3015 16.3353 30.6102 15.5901 30.6102 14.7974C30.6102 14.3675 30.5187 13.9519 30.3462 13.5718C30.622 13.4332 30.8809 13.2498 31.1108 13.0199C31.6714 12.4595 31.9801 11.7143 31.9801 10.9216ZM24.6751 14.7975C24.6751 14.9561 24.688 15.1127 24.7122 15.2665C24.1511 15.3751 23.6154 15.6461 23.1817 16.0798C22.643 16.6185 22.3378 17.3279 22.3147 18.0859C21.5863 18.1087 20.8648 18.3968 20.31 18.9514C19.9149 19.3466 19.6549 19.8263 19.5297 20.3329C19.3301 20.2912 19.1249 20.2692 18.9163 20.2692C18.1236 20.2692 17.3783 20.5778 16.8179 21.1384C16.5935 21.3627 16.4103 21.617 16.2703 21.8917C15.9116 21.7414 15.5232 21.6623 15.1227 21.6623C14.3551 21.6623 13.6325 21.9526 13.0785 22.4799C12.5279 21.9677 11.8155 21.6864 11.0596 21.6864C10.7414 21.6864 10.4312 21.737 10.1372 21.8327C10.233 21.5388 10.2835 21.2285 10.2835 20.9104C10.2835 20.1592 10.0059 19.4508 9.49972 18.9017C10.0272 18.3477 10.3175 17.625 10.3175 16.8572C10.3175 16.4567 10.2384 16.0683 10.0881 15.7096C10.3628 15.5696 10.6171 15.3864 10.8414 15.162C11.402 14.6016 11.7107 13.8564 11.7107 13.0636C11.7107 12.8556 11.6888 12.6511 11.6474 12.4522C12.1657 12.324 12.6411 12.0572 13.0284 11.6699C13.5668 11.1316 13.872 10.4227 13.8953 9.66519C14.6529 9.64183 15.3618 9.3366 15.9001 8.79824C16.3242 8.37413 16.6039 7.84414 16.715 7.26798C16.8682 7.29209 17.0243 7.3049 17.1824 7.3049C17.9751 7.3049 18.7203 6.99624 19.2808 6.43576C19.5084 6.20818 19.6936 5.94981 19.8343 5.6705C20.2222 5.84561 20.6401 5.93369 21.0582 5.93369C21.5414 5.93369 22.0244 5.81625 22.461 5.58236C22.5811 5.77651 22.7241 5.95843 22.8895 6.12391C23.4498 6.68414 24.1945 6.99274 24.9867 6.99311C24.987 7.78535 25.2956 8.53006 25.8558 9.09022C26.021 9.25539 26.2024 9.39801 26.3962 9.51795C26.1667 9.94443 26.0446 10.4236 26.0446 10.9215C26.0446 11.351 26.136 11.7662 26.3081 12.146C26.0293 12.2867 25.7713 12.4717 25.544 12.699C24.9837 13.2596 24.6751 14.0048 24.6751 14.7975ZM7.31609 17.9426C6.73794 17.9254 6.25654 17.4357 6.25654 16.8572C6.25654 16.322 6.66097 15.8558 7.18865 15.7729C7.83634 15.6712 8.44355 16.2111 8.44355 16.8572C8.44361 17.4672 7.92099 17.9606 7.31609 17.9426ZM28.2392 11.6949C27.8215 11.2772 27.8235 10.5641 28.2392 10.1484C28.4457 9.94181 28.7204 9.82811 29.0124 9.82811C29.6043 9.82811 30.1059 10.3319 30.1059 10.9216C30.1059 11.2138 29.9922 11.4883 29.7856 11.6949C29.3593 12.1212 28.6656 12.1212 28.2392 11.6949ZM29.0479 6.99193C29.0479 7.28403 28.9341 7.55859 28.7276 7.76518C28.3086 8.18416 27.5987 8.18272 27.1812 7.76518C26.762 7.34607 26.7635 6.63647 27.1812 6.21874C27.5998 5.80013 28.3104 5.80156 28.7276 6.21874C28.9341 6.42526 29.0479 6.69988 29.0479 6.99193ZM24.9881 2.93264C25.2681 2.93264 25.5481 3.03922 25.7613 3.25236C25.9679 3.45895 26.0816 3.7335 26.0816 4.02561C26.0816 4.62164 25.5836 5.11915 24.9881 5.11915C24.696 5.11915 24.4214 5.00545 24.2148 4.79886C24.0083 4.59228 23.8946 4.31772 23.8946 4.02561C23.8946 3.43465 24.3988 2.93264 24.9881 2.93264ZM20.2852 2.19437C20.4917 1.98779 20.7663 1.87409 21.0584 1.87409C21.651 1.87409 22.152 2.3766 22.152 2.96763C22.152 3.25967 22.0382 3.53429 21.8317 3.74081C21.4053 4.16717 20.7115 4.16723 20.2852 3.74088C20.0787 3.53429 19.965 3.25973 19.965 2.96763C19.965 2.67552 20.0786 2.40096 20.2852 2.19437ZM16.4148 3.56958C16.6146 3.37005 16.8881 3.24443 17.1826 3.24443C17.7772 3.24443 18.276 3.74456 18.276 4.3374C18.276 4.62951 18.1623 4.90406 17.9558 5.11065C17.5412 5.52514 16.8214 5.52276 16.4093 5.11065C15.9904 4.69173 15.999 3.98476 16.4148 3.56958ZM13.0286 5.92675C13.45 5.5054 14.1543 5.5059 14.5751 5.92675C14.7816 6.13334 14.8954 6.4079 14.8954 6.69994C14.8954 7.29141 14.3911 7.79347 13.8018 7.79347C13.5097 7.79347 13.2352 7.67978 13.0286 7.47319C12.6137 7.05833 12.6157 6.33968 13.0286 5.92675ZM10.163 8.8043C10.7233 8.24482 11.6831 8.47146 11.9568 9.20473C12.0006 9.32186 12.0237 9.44649 12.0237 9.57155C12.0237 9.86366 11.9099 10.1382 11.7034 10.3448C11.2819 10.7663 10.578 10.7658 10.157 10.3448C9.7348 9.92263 9.74385 9.22278 10.163 8.8043ZM7.97003 12.2905C8.38732 11.8732 9.10098 11.875 9.51646 12.2905C9.93764 12.7116 9.93707 13.4163 9.51646 13.8369C9.06887 14.2846 8.26207 14.2321 7.87482 13.7285C7.54617 13.3012 7.59096 12.6695 7.97003 12.2905ZM6.23024 20.9105C6.23031 20.6279 6.33469 20.3454 6.54284 20.1372C6.96008 19.72 7.67342 19.7214 8.08928 20.1372C8.50889 20.5569 8.5077 21.2653 8.08928 21.6837C7.88276 21.8903 7.60814 22.004 7.31609 22.004C6.71626 22.0039 6.23018 21.5076 6.23024 20.9105ZM5.70569 27.8841L4.24008 29.3497L2.67378 27.7834L4.13932 26.3178C4.55062 25.9066 5.2198 25.9065 5.6311 26.3178L5.70562 26.3923C6.11692 26.8036 6.11692 27.4728 5.70569 27.8841ZM11.833 25.4273C11.1654 26.095 9.96618 25.6002 9.96618 24.6541C9.96618 24.0627 10.4705 23.5605 11.0597 23.5605C11.6501 23.5605 12.1532 24.0658 12.1532 24.6541C12.1532 24.9462 12.0395 25.2207 11.833 25.4273ZM15.896 25.4032C15.231 26.0683 14.0292 25.5724 14.0292 24.6299C14.0292 24.0419 14.5373 23.5364 15.1227 23.5364C15.7073 23.5364 16.2163 24.046 16.2163 24.6299C16.2163 24.9221 16.1025 25.1967 15.896 25.4032ZM19.6779 23.9982C19.4765 24.1998 19.2036 24.3303 18.9163 24.3303C18.2176 24.3303 17.6771 23.6211 17.8619 22.9453C18.0747 22.1667 19.1186 21.8926 19.6895 22.4636C20.1179 22.8919 20.1008 23.5746 19.6779 23.9982ZM23.1817 21.8231C22.7552 22.2494 22.0615 22.2494 21.6352 21.8231C21.2089 21.3968 21.2089 20.703 21.6352 20.2766C22.0616 19.8503 22.7554 19.8503 23.1817 20.2766C23.608 20.703 23.608 21.3968 23.1817 21.8231ZM26.0476 18.9458C25.8476 19.1457 25.5741 19.2717 25.2801 19.2717C24.6897 19.2717 24.1865 18.7657 24.1865 18.1782C24.1865 17.8861 24.3003 17.6115 24.5068 17.4049C24.9332 16.9787 25.627 16.9786 26.0533 17.4049C26.2599 17.6115 26.3736 17.8861 26.3736 18.1782C26.3736 18.473 26.2473 18.7462 26.0476 18.9458ZM28.4159 15.5708C27.9895 15.997 27.2957 15.9971 26.8694 15.5708C26.6628 15.3642 26.5492 15.0896 26.5492 14.7975C26.5492 14.202 27.0474 13.704 27.6427 13.704C28.2386 13.704 28.7362 14.2019 28.7362 14.7975C28.7362 15.0896 28.6225 15.3642 28.4159 15.5708Z" fill="#240028"/>
  </g>
  <defs>
    <clipPath id="clip0_1494_5">
      <rect width="32" height="32" fill="white"/>
    </clipPath>
  </defs>
      </svg>`,
    width: "100%",
  };

  dobFocused: boolean = false;
  tobFocused: boolean = false;
  rudrakshFormGroup = new FormGroup({
    name: new FormControl('', [Validators.required]),
    email: new FormControl('', [Validators.email, Validators.required]),
    phone: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern(/^\d+$/)]),
    dob: new FormControl('', [Validators.required]),
    tob: new FormControl('', [Validators.required]),
    place: new FormControl('', [Validators.required])
  })
  selectedPurpose = "Select Purpose";
  selectedPurposeId: number = -1;
  submitted: boolean = false;
  selectedCode: number = 91;
  rudrakshInfoCard: {
    brief: string;
  }[] = [
    {
      brief: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
    }



    // add when true content available
  ] 
  constructor(private headerserveice: HeaderService, private sanitizer: DomSanitizer, private router: Router, private formService: FormService) {}

  ngOnInit(): void {
    this.headerserveice.setColorSubject(false);
    this.svgSanitizer();
  }

  private svgSanitizer() {
    this.menuCard.svg = this.sanitizer.bypassSecurityTrustHtml(this.menuCard.svg as string);
  }

  get f() {
    return this.rudrakshFormGroup.controls;
  }

  toggleDatePicker(input: HTMLInputElement, event: MouseEvent): void {
    event.stopPropagation();
    if (this.dobFocused) {
      input.blur();
    } else {
      input.focus();
      setTimeout(() => input.showPicker(), 0);
    }
  }

  toggleTimePicker(input: HTMLInputElement, event: MouseEvent): void {
    event.stopPropagation();
    if (this.tobFocused) {
      input.blur();
    } else {
      input.focus();
      setTimeout(() => input.showPicker(), 0);
    }
  }

  stopPropagation(event: Event): void {
    event.stopPropagation();
  }

  submitForm() {
    this.submitted = true;
    const form = this.patchForm(this.rudrakshFormGroup);
    if (this.validForm(form)) {
      this.formService.setRudrakshData(form);
      this.router.navigate(['home/rudrakhs-calculator/result'])
    }
  }

  patchForm(formGroup: FormGroup): IRudrakshForm {
    const rawValue = formGroup.value;
    return {
      name: rawValue.name || '',
      email: rawValue.email || '',
      phone: `${this.selectedCode}${rawValue.phone}` || '',
      dob: rawValue.dob || '',
      tob: rawValue.tob || '',
      place: rawValue.place || '',
      purpose: this.selectedPurpose,
    };
  }

  validForm(form: IRudrakshForm): boolean {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const phoneRegex = /^\d{10,}$/;
  

    return (
      form.name.trim().length > 0 &&
      emailRegex.test(form.email) &&
      phoneRegex.test(form.phone) &&
      form.dob.trim().length > 0 &&
      form.tob.trim().length > 0 &&
      form.place.trim().length > 0
      // && this.selectedPurposeId > -1
    );
  }
}
